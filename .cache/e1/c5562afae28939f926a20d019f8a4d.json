{"id":"lpse","dependencies":[{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\package.json","includedInParent":true,"mtime":1650081464135},{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1650081463614},{"name":"../internals/global","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\ordinary-to-primitive.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/function-call","loc":{"line":2,"column":19,"index":64},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\ordinary-to-primitive.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/is-callable","loc":{"line":3,"column":25,"index":120},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\ordinary-to-primitive.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\is-callable.js"},{"name":"../internals/is-object","loc":{"line":4,"column":23,"index":172},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\ordinary-to-primitive.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\core-js\\internals\\is-object.js"}],"generated":{"js":"\nvar $lpse$exports = {};\nvar $lpse$var$global = $parcel$require(\"lpse\", \"../internals/global\");\nvar $lpse$var$call = $parcel$require(\"lpse\", \"../internals/function-call\");\nvar $lpse$var$isCallable = $parcel$require(\"lpse\", \"../internals/is-callable\");\nvar $lpse$var$isObject = $parcel$require(\"lpse\", \"../internals/is-object\");\nvar $lpse$var$TypeError = $lpse$var$global.TypeError; // `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\n\n$lpse$exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && $lpse$var$isCallable(fn = input.toString) && !$lpse$var$isObject(val = $lpse$var$call(fn, input))) return val;\n  if ($lpse$var$isCallable(fn = input.valueOf) && !$lpse$var$isObject(val = $lpse$var$call(fn, input))) return val;\n  if (pref !== 'string' && $lpse$var$isCallable(fn = input.toString) && !$lpse$var$isObject(val = $lpse$var$call(fn, input))) return val;\n  throw $lpse$var$TypeError(\"Can't convert object to primitive value\");\n};"},"sourceMaps":null,"error":null,"hash":"b49047deb74a4d3019fea5e2444a6454","cacheData":{"env":{},"imports":{"$require$../internals/global":["../internals/global","*"],"$require$../internals/function-call":["../internals/function-call","*"],"$require$../internals/is-callable":["../internals/is-callable","*"],"$require$../internals/is-object":["../internals/is-object","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}