{"id":"Z7xV","dependencies":[{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\package.json","includedInParent":true,"mtime":1650081464135},{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1650081447908},{"name":"./_baseGetTag.js","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\lodash-es\\isSymbol.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\lodash-es\\_baseGetTag.js"},{"name":"./isObjectLike.js","loc":{"line":2,"column":25,"index":68},"parent":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\lodash-es\\isSymbol.js","resolved":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\lodash-es\\isObjectLike.js"}],"generated":{"js":"var $Z7xV$exports = {};\n$parcel$require(\"Z7xV\", \"./_baseGetTag.js\");\n$parcel$require(\"Z7xV\", \"./isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar $Z7xV$var$symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction $Z7xV$export$default(value) {\n  return typeof value == 'symbol' || $Z7xV$import$isObjectLike(value) && $Z7xV$import$baseGetTag(value) == $Z7xV$var$symbolTag;\n}\n\n$Z7xV$exports.default = $Z7xV$export$default;"},"sourceMaps":null,"error":null,"hash":"be1e5f0ee30eb1ddbb310f73db5e4777","cacheData":{"env":{},"imports":{"$Z7xV$import$baseGetTag":["./_baseGetTag.js","default"],"$Z7xV$import$isObjectLike":["./isObjectLike.js","default"]},"exports":{"default":"$Z7xV$export$default"},"wildcards":[],"sideEffects":false,"isES6Module":true}}