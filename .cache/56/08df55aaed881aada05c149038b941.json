{"id":"f2L0","dependencies":[{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\package.json","includedInParent":true,"mtime":1650081464135},{"name":"C:\\Users\\WAI YAN MIN KHANT\\Desktop\\e-learning template\\node_modules\\smooth-scrollbar\\package.json","includedInParent":true,"mtime":1650081442282}],"generated":{"js":"var $f2L0$exports = {};\nvar $f2L0$var$eventListenerOptions;\nvar $f2L0$var$eventMap = new WeakMap();\n\nfunction $f2L0$var$getOptions() {\n  if ($f2L0$var$eventListenerOptions !== undefined) {\n    return $f2L0$var$eventListenerOptions;\n  }\n\n  var supportPassiveEvent = false;\n\n  try {\n    var noop = function () {};\n\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        supportPassiveEvent = true;\n      }\n    });\n    window.addEventListener('testPassive', noop, options);\n    window.removeEventListener('testPassive', noop, options);\n  } catch (e) {}\n\n  $f2L0$var$eventListenerOptions = supportPassiveEvent ? {\n    passive: false\n  } : false;\n  return $f2L0$var$eventListenerOptions;\n}\n\nfunction $f2L0$export$eventScope(scrollbar) {\n  var configs = $f2L0$var$eventMap.get(scrollbar) || [];\n  $f2L0$var$eventMap.set(scrollbar, configs);\n  return function addEvent(elem, events, fn) {\n    function handler(event) {\n      // ignore default prevented events\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      fn(event);\n    }\n\n    events.split(/\\s+/g).forEach(function (eventName) {\n      configs.push({\n        elem: elem,\n        eventName: eventName,\n        handler: handler\n      });\n      elem.addEventListener(eventName, handler, $f2L0$var$getOptions());\n    });\n  };\n}\n\n$f2L0$exports.eventScope = $f2L0$export$eventScope;\n\nfunction $f2L0$export$clearEventsOn(scrollbar) {\n  var configs = $f2L0$var$eventMap.get(scrollbar);\n\n  if (!configs) {\n    return;\n  }\n\n  configs.forEach(function (_a) {\n    var elem = _a.elem,\n        eventName = _a.eventName,\n        handler = _a.handler;\n    elem.removeEventListener(eventName, handler, $f2L0$var$getOptions());\n  });\n  $f2L0$var$eventMap.delete(scrollbar);\n} //# sourceMappingURL=event-hub.js.map\n\n\n$f2L0$exports.clearEventsOn = $f2L0$export$clearEventsOn;"},"sourceMaps":null,"error":null,"hash":"2427fa1c6d4ed89214b1e1048c8686ff","cacheData":{"env":{},"imports":{},"exports":{"eventScope":"$f2L0$export$eventScope","clearEventsOn":"$f2L0$export$clearEventsOn"},"wildcards":[],"sideEffects":true,"isES6Module":true}}